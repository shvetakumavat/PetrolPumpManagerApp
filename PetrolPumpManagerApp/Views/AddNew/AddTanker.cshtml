@model PetrolPumpManagerApp.Models.Tanker

@{
    ViewBag.Title = "AddTanker";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="card mt-4 border">
    <div class="card-header bg-white"><h4><b>Tancker Info</b></h4></div>

    <div class="card-body">
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div style="margin:auto" class="col-lg-9 col-md-12 col-sm-12">
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.TankerName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TankerName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TankerName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">

                    <div class="row">
                        @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.MinmumDip, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MinmumDip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MinmumDip, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.MaximumDip, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.MaximumDip, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MaximumDip, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-md-2">
                            <input type="submit" value="Add" class="btn btn-primary mt-4 pl-4 pr-4" />
                        </div>
                        <div class=" col-md-2">
                            <input type="submit" value="Reset" class="btn btn-outline-warning mt-4 pl-4 pr-4" />
                        </div>
                    </div>
                </div>


            </div>

        </div>
    </div>
    <div class="btn" style="-webkit-border-top-right-radius: 70px; -webkit-border-bottom-right-radius: 70px; -moz-border-radius-topright: 70px; -moz-border-radius-bottomright: 70px; border-top-right-radius: 70px; border-bottom-right-radius: 70px; width: 150px; background-image: linear-gradient(to right, rgb(137, 20, 254) 0%, rgb(128, 99, 245) 100%) ">
        <i class="ti-arrow-left" style="color:white"></i>   @Html.ActionLink("Back to List", "Tankers", "", htmlAttributes: new { @class = "text-white" })
    </div>

</div>

}



