@model PetrolPumpManagerApp.Models.PurchaseProduct

@{
    ViewBag.Title = "Create";
}


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
<div class="card mt-4 border">
    <div class="card-header bg-white">
        <span class="font-weight-bold h3" style="color:  rgb(137, 20, 254)">Purc</span><span class="font-weight-bold h3" style="color:black">hase</span>

    </div>
    <div class="card-body">
        <div class="form-horizontal">
            <div style="margin:auto" class="col-lg-9 col-md-12 col-sm-12">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control", Type = "date" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.ProductsId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.ProductsId, new SelectList(ViewBag.ProductList, "ProductID", "ProductName"), "--Select--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ProductsId, "", new { @class = "text-danger" })
                        </div> <p class="p-2 col-md-6 mb-1 alert-info">Add new Product Name directly if it is not present in list</p>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.SuppliersId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.SuppliersId, new SelectList(ViewBag.SupplierList, "SupplierID", "FullName"), "--Select--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.SuppliersId, "", new { @class = "text-danger" })
                        </div> <p class="p-2 mb-1 col-md-6 alert-info">
                            Add New Tanker and Suppliers if not present in list by cliking on  <span class="text-info">Add New</span><br />
                        </p>

                    </div>
                </div>



                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.TankersId, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.DropDownListFor(model => model.TankersId, new SelectList(ViewBag.TankerList, "TankerId", "TankerID", "TankerName"), "--Select--", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TankersId, "", new { @class = "text-danger" })
                        </div>    <p class="p-2 mb-1 col-md-6 alert-info">
                            Specify tanker if you order new tanker otherwise
                            you can left this field empty if you purchase other items<br />
                        </p>

                    </div>
                </div>




                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.PurchaseAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4">
                            @Html.EditorFor(model => model.PurchaseAmount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PurchaseAmount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="row">
                        <div class="col-2">
                            <input type="submit" value="Save" class="btn btn-primary" />

                        </div>
                        <div class="col-4"> <input type="reset" value="Reset" class="btn btn-outline-warning" /></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="btn" style="-webkit-border-top-right-radius: 70px; -webkit-border-bottom-right-radius: 70px; -moz-border-radius-topright: 70px; -moz-border-radius-bottomright: 70px; border-top-right-radius: 70px; border-bottom-right-radius: 70px; width: 150px; background-image: linear-gradient(to right, rgb(137, 20, 254) 0%, rgb(128, 99, 245) 100%) ">
        <i class="ti-arrow-left" style="color:white"></i>   @Html.ActionLink("Back to List", "Index", "", htmlAttributes: new { @class = "text-white" })
    </div>
</div>

}

